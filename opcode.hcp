namespace websocket
{
  inline
  const char * opcode_name(opcode value)
  {
    switch(value)
      {
      case opcode::continuation: return "continuation";
      case opcode::text: return "text";
      case opcode::binary: return "binary";
      case opcode::close: return "close";
      case opcode::ping: return "ping";
      case opcode::pong : return "pong";
      default: return "unknown";
      }
  }

  template<typename T> inline
  bool is_valid_opcode(T value)
  {
    switch(value)
      {
      case (uint8_t)opcode::continuation:
      case (uint8_t)opcode::text:
      case (uint8_t)opcode::binary:
      case (uint8_t)opcode::close:
      case (uint8_t)opcode::ping:
      case (uint8_t)opcode::pong:
	return true;
      default:
	return false;
      }
  }

  inline
  bool is_control(opcode value)
  {
    return (uint8_t)value & (uint8_t)0x8;
  }

  inline
  bool is_non_control(opcode value)
  {
    return value != opcode::continuation && !is_control(value);
  }
};
